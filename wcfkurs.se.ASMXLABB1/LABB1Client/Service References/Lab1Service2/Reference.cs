//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LABB1Client.Lab1Service2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Lab1Service2.Lab1Service2Soap")]
    public interface Lab1Service2Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFunction", ReplyAction="*")]
        int AddFunction(int nrx, int nry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFunction", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddFunctionAsync(int nrx, int nry);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Lab1Service2SoapChannel : LABB1Client.Lab1Service2.Lab1Service2Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Lab1Service2SoapClient : System.ServiceModel.ClientBase<LABB1Client.Lab1Service2.Lab1Service2Soap>, LABB1Client.Lab1Service2.Lab1Service2Soap {
        
        public Lab1Service2SoapClient() {
        }
        
        public Lab1Service2SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Lab1Service2SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Lab1Service2SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Lab1Service2SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddFunction(int nrx, int nry) {
            return base.Channel.AddFunction(nrx, nry);
        }
        
        public System.Threading.Tasks.Task<int> AddFunctionAsync(int nrx, int nry) {
            return base.Channel.AddFunctionAsync(nrx, nry);
        }
    }
}
